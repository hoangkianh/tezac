'use client';

import React, { useState, useEffect } from 'react';
import Link from 'next/link';
import { usePathname } from 'next/navigation';

// Import icons from react-icons
import { FaShoppingCart, FaHome, FaBars } from 'react-icons/fa';
import { FaTrashCan, FaShieldHalved, FaBridge, FaWallet } from 'react-icons/fa6';
import { GiDigDug } from "react-icons/gi";
import { BsFillSendFill } from "react-icons/bs";
import { MdLocalOffer } from "react-icons/md";

// Logo component (keeping custom SVG for the logo)
const TezacLogo = () => (
    <svg width="666" height="177" viewBox="0 0 666 177" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g clipPath="url(#clip0_115_1153)">
            <path fillRule="evenodd" clipRule="evenodd" d="M14.6899 0.26013C15.3438 0.597011 17.3255 2.65793 19.2081 4.93684C19.9611 5.86822 26.3816 13.5769 33.476 22.0782L38.6468 28.2921L38.6867 28.3401C44.1689 34.9282 49.3873 41.1995 51.5685 43.8169C54.8693 47.808 59.7786 50.1186 64.9578 50.1186H82.8588L96.5196 50.1082C104.402 50.1022 111.875 46.6003 116.923 40.5472C130.419 24.3372 148.57 2.77683 150.017 1.23114C150.532 0.676276 151.226 0.141225 151.523 0.0619584C152.296 -0.116391 153.604 0.299757 154.238 0.953703C154.753 1.46893 154.773 1.58785 154.912 4.24326C154.991 5.76914 155.13 22.4943 155.229 41.4191L155.345 66.6245C155.373 72.7228 156.289 78.7845 158.063 84.6192C164.562 105.922 165.851 110.44 165.652 111.253C165.315 112.6 163.175 114.483 131.806 141.136C130.279 142.441 129.056 144.065 128.224 145.894L128.08 146.209C126.198 150.271 121.977 160.16 119.064 167.234C115.695 175.478 115.378 176.092 114.466 176.469C113.218 177.004 112.346 176.746 109.334 175.062C106.005 173.179 97.959 168.463 89.1803 163.212L85.5856 161.059C83.7899 159.984 81.5436 160.004 79.7674 161.111C75.17 163.945 56.3641 175.121 55.1157 175.775C53.8672 176.409 52.2423 176.548 51.2911 176.112C50.6173 175.815 49.7454 173.992 46.0595 165.253C44.5336 161.606 41.7791 155.166 39.956 150.945C37.7654 145.912 34.4566 141.444 30.281 137.881L26.2231 134.418C4.88069 116.227 0.976832 112.759 0.24362 111.292C-0.0107104 110.809 -0.0684675 110.246 0.0824158 109.721L0.758851 107.369C1.25426 105.625 2.32436 102.078 3.13684 99.5014C3.3061 98.9513 3.50429 98.3081 3.72039 97.6068L3.72143 97.6034L3.72214 97.6011C4.51779 95.0189 5.55571 91.6503 6.28767 89.2364C7.21904 86.1847 8.54675 81.9043 9.26015 79.7245C10.1136 77.1118 10.5505 74.381 10.555 71.6325L10.6077 39.1204C10.6116 36.3709 10.6148 33.8196 10.6178 31.4521C10.6528 3.34847 10.6555 1.14606 11.5747 0.653343C11.6528 0.611447 11.7376 0.581912 11.8296 0.549866C11.9289 0.515285 12.0366 0.477779 12.1534 0.41866C13.164 -0.0767538 13.9369 -0.136201 14.6899 0.26013ZM47.5259 103.074V115.893C47.5259 116.997 48.4213 117.893 49.5259 117.893H52.036H54.5461C55.6507 117.893 56.5461 116.997 56.5461 115.893V103.074V90.255C56.5461 89.1504 55.6507 88.255 54.5461 88.255H52.036H49.5259C48.4213 88.255 47.5259 89.1504 47.5259 90.255V103.074ZM109.378 115.893V103.074V90.255C109.378 89.1504 110.273 88.255 111.378 88.255H113.888H116.398C117.502 88.255 118.398 89.1504 118.398 90.255V103.074V115.893C118.398 116.997 117.502 117.893 116.398 117.893H113.888H111.378C110.273 117.893 109.378 116.997 109.378 115.893Z" fill="#8EE200" />
            <path d="M223.484 154.053C222.379 154.053 221.484 153.157 221.484 152.053C221.484 140.154 221.484 128.167 221.484 116.093C221.484 103.927 221.484 91.8912 221.484 79.9868C221.484 78.8822 220.589 77.9869 219.484 77.9869C216.436 77.9869 213.355 77.9869 210.242 77.9869C207.129 77.9869 204.048 77.9869 201 77.9869C199.895 77.9869 199 77.0915 199 75.9869C199 72.842 199 69.664 199 66.4529C199 63.1599 199 59.9332 199 56.7728C199 55.6682 199.895 54.7729 201 54.7729C211.932 54.7729 222.994 54.7729 234.186 54.7729C245.378 54.7729 256.44 54.7729 267.372 54.7729C268.477 54.7729 269.372 55.6682 269.372 56.7728C269.372 59.9332 269.372 63.1599 269.372 66.4529C269.372 69.664 269.372 72.842 269.372 75.9869C269.372 77.0915 268.477 77.9869 267.372 77.9869C264.405 77.9869 261.373 77.9869 258.276 77.9869C255.163 77.9869 252.082 77.9869 249.034 77.9869C247.929 77.9869 247.034 78.8822 247.034 79.9868C247.034 91.8912 247.034 103.927 247.034 116.093C247.034 128.167 247.034 140.154 247.034 152.053C247.034 153.157 246.139 154.053 245.034 154.053C241.501 154.053 237.934 154.053 234.332 154.053C230.716 154.053 227.1 154.053 223.484 154.053Z" fill="white" />
            <path d="M299.841 154.053C298.736 154.053 297.841 153.158 297.841 152.053C297.841 136.352 297.841 120.472 297.841 104.413C297.841 88.3537 297.841 72.4737 297.841 56.7727C297.841 55.6682 298.736 54.7729 299.841 54.7729C309.018 54.7729 318.279 54.7729 327.625 54.7729C336.971 54.7729 346.232 54.7729 355.409 54.7729C356.513 54.7729 357.409 55.6682 357.409 56.7728C357.409 59.8366 357.409 62.966 357.409 66.1609C357.409 69.3557 357.409 72.4851 357.409 75.5489C357.409 76.6535 356.513 77.5489 355.409 77.5489C350.419 77.5489 345.392 77.5489 340.327 77.5489C335.348 77.5489 330.37 77.5489 325.391 77.5489C324.286 77.5489 323.391 78.4443 323.391 79.5489C323.391 81.3155 323.391 83.0822 323.391 84.8489C323.391 86.5413 323.391 88.2593 323.391 90.0028C323.391 91.1074 324.286 92.0029 325.391 92.0029C329.895 92.0029 334.435 92.0029 339.013 92.0029C343.578 92.0029 348.07 92.0029 352.489 92.0029C353.593 92.0029 354.489 92.8983 354.489 94.0028C354.489 96.9538 354.489 99.9372 354.489 102.953C354.489 105.985 354.489 109.017 354.489 112.049C354.489 113.153 353.593 114.049 352.489 114.049C348.07 114.049 343.578 114.049 339.013 114.049C334.435 114.049 329.895 114.049 325.391 114.049C324.286 114.049 323.391 114.944 323.391 116.049C323.391 118.225 323.391 120.43 323.391 122.663C323.391 124.896 323.391 127.101 323.391 129.277C323.391 130.381 324.286 131.277 325.391 131.277C330.37 131.277 335.348 131.277 340.327 131.277C345.392 131.277 350.419 131.277 355.409 131.277C356.513 131.277 357.409 132.172 357.409 133.277C357.409 136.341 357.409 139.47 357.409 142.665C357.409 145.86 357.409 148.989 357.409 152.053C357.409 153.157 356.513 154.053 355.409 154.053C346.232 154.053 336.971 154.053 327.625 154.053C318.279 154.053 309.018 154.053 299.841 154.053Z" fill="white" />
            <path d="M389.386 154.053C388.281 154.053 387.386 153.157 387.386 152.053C387.386 149.005 387.386 145.924 387.386 142.811C387.386 139.243 387.386 135.718 387.386 132.236C387.386 131.803 387.526 131.382 387.786 131.036C394.372 122.255 401.052 113.381 407.826 104.413C413.914 96.3518 419.927 88.3663 425.865 80.4563C426.854 79.1382 425.914 77.2569 424.266 77.2569C418.848 77.2569 413.368 77.2569 407.826 77.2569C401.6 77.2569 395.453 77.2569 389.386 77.2569C388.281 77.2569 387.386 76.3615 387.386 75.2569C387.386 72.2089 387.386 69.1283 387.386 66.0149C387.386 62.9014 387.386 59.8208 387.386 56.7728C387.386 55.6683 388.281 54.7729 389.386 54.7729C400.41 54.7729 411.52 54.7729 422.718 54.7729C434.007 54.7729 445.166 54.7729 456.196 54.7729C457.3 54.7729 458.196 55.6683 458.196 56.7728C458.196 59.8208 458.196 62.9014 458.196 66.0149C458.196 69.583 458.196 73.1081 458.196 76.5902C458.196 77.0229 458.055 77.4439 457.796 77.7901C451.209 86.5708 444.529 95.4451 437.756 104.413C431.667 112.474 425.654 120.459 419.716 128.369C418.727 129.687 419.667 131.569 421.316 131.569C426.733 131.569 432.213 131.569 437.756 131.569C443.981 131.569 450.128 131.569 456.196 131.569C457.3 131.569 458.196 132.464 458.196 133.569C458.196 136.617 458.196 139.697 458.196 142.811C458.196 145.924 458.196 149.005 458.196 152.053C458.196 153.157 457.3 154.053 456.196 154.053C445.166 154.053 434.007 154.053 422.718 154.053C411.52 154.053 400.41 154.053 389.386 154.053Z" fill="white" />
            <path d="M482.803 154.053C481.456 154.053 480.494 152.748 480.892 151.461C485.686 135.953 490.48 120.27 495.274 104.413C500.284 88.1521 505.249 72.0749 510.168 56.1815C510.427 55.3439 511.202 54.7729 512.078 54.7729C517.338 54.7729 522.637 54.7729 527.978 54.7729C533.408 54.7729 538.756 54.7729 544.023 54.7729C544.9 54.7729 545.675 55.3439 545.934 56.1815C550.85 72.075 555.766 88.1521 560.682 104.413C565.568 120.27 570.411 135.953 575.21 151.462C575.608 152.748 574.646 154.053 573.299 154.053C569.981 154.053 566.602 154.053 563.164 154.053C559.371 154.053 555.579 154.053 551.786 154.053C550.912 154.053 550.138 153.485 549.88 152.648C549.066 150.002 548.286 147.355 547.542 144.709C546.797 141.979 546.018 139.283 545.203 136.624C544.946 135.787 544.172 135.219 543.298 135.219C538.231 135.219 533.125 135.219 527.978 135.219C522.92 135.219 517.862 135.219 512.804 135.219C511.93 135.219 511.156 135.787 510.899 136.624C510.084 139.283 509.305 141.979 508.56 144.709C507.816 147.355 507.036 150.002 506.221 152.648C505.964 153.485 505.19 154.053 504.316 154.053C500.599 154.053 496.806 154.053 492.938 154.053C489.559 154.053 486.181 154.053 482.803 154.053ZM518.496 110.912C518.125 112.19 519.085 113.465 520.416 113.465C522.936 113.465 525.457 113.465 527.978 113.465C530.574 113.465 533.144 113.465 535.686 113.465C537.017 113.465 537.977 112.19 537.606 110.912C536.184 106.007 534.727 101.066 533.234 96.0909C532.158 92.503 531.1 88.9336 530.06 85.3825C529.496 83.4566 526.743 83.4541 526.168 85.3766C525.105 88.9297 524.005 92.5011 522.868 96.0909C521.375 101.066 519.918 106.007 518.496 110.912Z" fill="white" />
            <path d="M592.319 104.413C592.319 96.9182 593.487 90.1049 595.823 83.9729C598.257 77.7435 601.663 72.3415 606.043 67.7669C610.423 63.1922 615.679 59.6395 621.811 57.1089C627.943 54.5782 634.708 53.2155 642.105 53.0209C649.177 52.8372 656.681 53.8665 664.619 56.1089C665.469 56.3492 666.049 57.1305 666.049 58.0145C666.049 61.6171 666.049 65.2572 666.049 68.9349C666.049 71.9685 666.049 75.0022 666.049 78.0359C666.049 79.5048 664.516 80.4767 663.155 79.9226C658.392 77.9826 653.663 76.8507 648.967 76.5269C643.322 76.1375 638.212 76.9162 633.637 78.8629C629.063 80.8095 625.413 83.9242 622.687 88.2069C619.962 92.3922 618.599 97.7942 618.599 104.413C618.599 111.032 619.962 116.482 622.687 120.765C625.413 124.95 629.063 128.016 633.637 129.963C638.212 131.91 643.322 132.688 648.967 132.299C653.663 131.975 658.392 130.843 663.155 128.903C664.516 128.349 666.049 129.321 666.049 130.79C666.049 133.845 666.049 136.928 666.049 140.037C666.049 143.628 666.049 147.22 666.049 150.811C666.049 151.695 665.469 152.476 664.619 152.717C656.681 154.959 649.177 155.989 642.105 155.805C634.708 155.61 627.943 154.248 621.811 151.717C615.679 149.186 610.423 145.634 606.043 141.059C601.663 136.484 598.257 131.131 595.823 124.999C593.487 118.77 592.319 111.908 592.319 104.413Z" fill="white" />
        </g>
        <defs>
            <clipPath id="clip0_115_1153">
                <rect width="666" height="177" fill="white" />
            </clipPath>
        </defs>
    </svg>

);

// Navigation links with icons
const navLinks = [
    { path: '/', label: 'README', icon: <FaHome size={20} /> },
    { path: '/mint', label: 'Mint', icon: <GiDigDug size={20} /> },
    { path: '/transfer', label: 'Transfer', icon: <BsFillSendFill size={20} /> },
    { path: '/listing', label: 'Listing', icon: <MdLocalOffer size={20} /> },
    { path: '/cancel-listing', label: 'Cancel Listing', icon: <FaTrashCan size={20} />, className: '' },
    { path: '/buy', label: 'Buy', icon: <FaShoppingCart size={20} /> },
    { path: '/verify-ownership', label: 'Verify', icon: <FaShieldHalved size={20} /> },
    { path: '/bridge', label: 'Bridge (WIP)', icon: <FaBridge size={20} /> },
];

// Custom NavLink component that works like the react-router NavLink
const NavLink = ({ children, href, className, activeClassName, exact = false }) => {
    const pathname = usePathname();
    const isActive = exact ? pathname === href : pathname.startsWith(href);

    return (
        <Link
            href={href}
            className={`${className} ${isActive ? activeClassName : ''}`}
        >
            {typeof children === 'function' ? children({ isActive }) : children}
        </Link>
    );
};

const AppLayout = ({ children }) => {
    const pathname = usePathname();
    const [connected, setConnected] = useState(false);
    const [menuOpen, setMenuOpen] = useState(false);
    const [scrolled, setScrolled] = useState(false);

    const handleConnectWallet = () => {
        setConnected(!connected);
    };

    const toggleMenu = () => {
        setMenuOpen(!menuOpen);
    };

    // Close menu when clicking outside or navigating
    useEffect(() => {
        const handleClickOutside = (event) => {
            const target = event.target;
            if (menuOpen && !target.closest('.sidebar') && !target.closest('.menu-toggle')) {
                setMenuOpen(false);
            }
        };

        const handleResize = () => {
            if (window.innerWidth > 768 && menuOpen) {
                setMenuOpen(false);
            }
        };

        const handleScroll = () => {
            setScrolled(window.scrollY > 20);
        };

        document.addEventListener('mousedown', handleClickOutside);
        window.addEventListener('resize', handleResize);
        window.addEventListener('scroll', handleScroll);

        return () => {
            document.removeEventListener('mousedown', handleClickOutside);
            window.removeEventListener('resize', handleResize);
            window.removeEventListener('scroll', handleScroll);
        };
    }, [menuOpen]);

    // Close menu when navigating
    useEffect(() => {
        setMenuOpen(false);
    }, [pathname]);

    return (
        <div className="app-container">
            <button
                className="menu-toggle"
                onClick={toggleMenu}
                aria-label="Toggle navigation menu"
            >
                <FaBars size={24} />
            </button>

            <aside className={`sidebar ${menuOpen ? 'open' : ''}`}>
                <div className="logo">
                    <TezacLogo />
                </div>

                <nav className="sidebar-nav">
                    {navLinks.map((link) => (
                        <NavLink
                            key={link.path}
                            href={link.path}
                            className={`nav-item ${link.className || ''}`}
                            activeClassName="active"
                            exact={link.path === '/'}
                        >
                            {({ isActive }) => (
                                <>
                                    {isActive && <div className="nav-active-indicator"></div>}
                                    <span className="nav-icon">{link.icon}</span>
                                    <span>{link.label}</span>
                                </>
                            )}
                        </NavLink>
                    ))}
                </nav>

                {/* <button
                    className={`wallet-button ${connected ? 'connected' : ''}`}
                    onClick={handleConnectWallet}
                >
                    <FaWallet size={20} />
                    <span>{connected ? 'Connected' : 'Connect Wallet'}</span>
                </button> */}
            </aside>

            <main className={`content ${scrolled ? 'scrolled' : ''}`}>
                {children}
            </main>
        </div>
    );
};

export default AppLayout; 